prettyNum(sum_file_out[23:40, ])#

options(scipen = 999)#

sum_file_out[23:40, ]#

options(scipen = 5)#
#

sum_file_out[23:40, ]#
#

sum_file_out[23:40, ]#
#
#

options(scipen = 2)#
#

sum_file_out[23:40, ]#
#
#
#

options(scipen = 3)#
#
#

sum_file_out[23:40, ]#
#
#
#
#

options(scipen = 1)#
#
#
#

sum_file_out[23:40, ]#
#
#
#
#
#

	data.table::fwrite(formatC(sum_file_out, format = "e", digits = 3), file = out, col.names=T, row.names=F, quote=F, sep="\t")	#

library(data.table)#

	data.table::fwrite(sum_file_out, file = out, col.names=T, row.names=F, quote=F, sep="\t")	#

	data.table::fwrite(sum_file_out, file = "out", col.names=T, row.names=F, quote=F, sep="\t")	#

options(digits=4)#

head(output)#

output#

	sum_file_out <- data.frame(sum_file[!names(sum_file) %in% c("gL", "gS")], format(output, digits=3)#

)#

head(sum_file_out)#

	sum_file_out <- data.frame(sum_file[!names(sum_file) %in% c("gL", "gS")], format(output, digits=3)#
	write.table(sum_file_out, file = out, col.names=T, row.names=F, quote=F, sep="\t")	#

 sum_file_out options(digits=3) #
#

options(digits=3) #
#

head(sum_file_out)#
#

class*sum_file_out$gL)#

class(sum_file_out$gL)#
#

class(sum_file_out$gS)#
#
#

head(sum_file)#

class(sum_file$gL)#

	sum_file_out <- cbind(sum_file[!names(sum_file) %in% c("gL", "gS")], format(output, digits=4))#

class(sum_file_out$gS)#

	sum_file_out <- cbind(sum_file[!names(sum_file) %in% c("gL", "gS")], output)#

class(sum_file_out$gS)#

head(sum_file_out)#

options(digits=2) #

head(sum_file_out)#
#

class(sum_file_out$gL)#

options(digits=1) #
#

class(sum_file_out$gL)#
#

head(sum_file_out)#

sum_file_out[10:20,]#

apply(sum_file_out, 2, class)#

	sum_file_out <- data.frame(sum_file[!names(sum_file) %in% c("gL", "gS")], output)#

apply(sum_file_out, 2, class)#
#

apply(output, 2, class)#

	sum_file_out <- data.frame(cbind(sum_file[!names(sum_file) %in% c("gL", "gS")], output))#

apply(output, 2, class)#
#

apply(sum_file_out, 2, class)#
#
#

gJLS2s#

	output <- gJLS2::gJLS2s(gL = sum_file$gL, gS = sum_file$gS)#

head(output)#

	sum_file_out$gJLS <- output$gJLS#

head(sum_file_out)#

formatC(0.001)#

formatC(0.001, digits=3)#
#

formatC(0.001, digits=3, format="E")#
#
#

formatC(0.001, digits=3, format="e")#
#
#
#

formatC(0.001, digits=2, format="e")#
#
#
#
#

formatC(0.01, digits=2, format="e")#
#
#
#
#
#

formatC(01, digits=2, format="e")#
#
#
#
#
#
#

formatC(01, digits=2, format="e")#
#
#
#
#
#
#
#

options()#

sum_file_out[1:100,]#

format(sum_file_out, digits=3)#

library(Rcpp)#

defaultNumThreads()#

library(RcppParallel)	#
#

defaultNumThreads()#

? as.BGData#

?as.BGData#

require("BGData")#

require("BEDMatrix")#

?as.BGData#
#

a  <- read.table("~/Documents/AcademicResearch/kraken_files/WeiGit/gJLS2/extdata/input/Covar.txt", head=T)#

b <- read.table("~/Documents/AcademicResearch/kraken_files/WeiGit/gJLS2/extdata/input/Pheno.txt", head=T)#

head(a)#

head(b)#

aa <- merge(b, a)#

head(aa)#

write.table(aa, "~/Documents/AcademicResearch/kraken_files/WeiGit/gJLS2/extdata/input/Pheno.txt", col.names=T, row.names=F, quote=F)#

bimf="./input/chrX_473_sample"#

phenof="./input/Pheno.txt"#

phenoName="pheno1"#

covarNames=c("SEX", "covar1")#

chunk_size=5#

centre="median"#

genotypic=F#

transform=T#

xchr=T#

out="out"#

#
if("gJLS2" %in% rownames(installed.packages()) == FALSE) {#
cat("gJLS2 not installed, trying to intall now ...")#
#install.packages("gJLS2", repos='http://cran.us.r-project.org')#
library("devtools")#
devtools::install_github("WeiAkaneDeng/gJLS2")#
}#
#
require("gJLS2")#
#
#
## checking pheno file#
#
#
if("BEDMatrix" %in% rownames(installed.packages()) == FALSE) {#
print("BEDMatrix not installed, trying to intall now ...")#
install.packages("BEDMatrix", repos='http://cran.us.r-project.org')#
}#
#
if("BGData" %in% rownames(installed.packages()) == FALSE) {#
print("BGData not installed, trying to intall now ...")#
install.packages("BGData", repos='http://cran.us.r-project.org', dependencies=T)#
}#
#
## checking inputs to be bed, fam, bim files#
#
require("BGData")#
require("BEDMatrix")#
bedFiles <- BEDMatrix(bimf)#
#
#
cat(paste("linking phenotype file", phenof, "\n"))#
#
bg <- as.BGData(bedFiles, alternatePhenotypeFile = paste0(phenof))#
	#

bimf#

bedFiles <- BEDMatrix(bimf)#

getwd()#

getwd()#
set#

setwd("/Users/weideng/Documents/AcademicResearch/kraken_files/WeiGit/gJLS2/extdata/")#

bedFiles <- BEDMatrix(bimf)#
#

#
cat(paste("linking phenotype file", phenof, "\n"))#
#
bg <- as.BGData(bedFiles, alternatePhenotypeFile = paste0(phenof))#
	#
## CHECKING ALL INPUT FILES AGAIN:#
#
pheno_dat <- pheno(bg)#
geno_dat <- geno(bg)#
#

sum(grepl("sex|SEX|Sex", covarNames)#

)#

	SEX_cov <- pheno_dat[,names(pheno_dat) %in% covarNames][grepl("sex|SEX|Sex", covarNames)][,1]#
	covarNames_use <- covarNames[!grepl("sex|SEX|Sex", covarNames)]#
	SEX_cov_PLINK <- ifelse(SEX_cov==0, 2, SEX_cov)#

head(pheno_dat)#

names(pheno_dat) %in% covarNames#

head(pheno_dat[,names(pheno_dat) %in% covarNames])#

covarNames#

[grepl("sex|SEX|Sex", covarNames)]#

grepl("sex|SEX|Sex", covarNames)#

	SEX_cov <- pheno_dat[,names(pheno_dat) %in% covarNames][grepl("sex|SEX|Sex", covarNames)]#

SEX_cov#

SEX_cov <- pheno_dat[,names(pheno_dat) %in% covarNames][grepl("sex|SEX|Sex", covarNames)]#
	covarNames_use <- covarNames[!grepl("sex|SEX|Sex", covarNames)]#
	SEX_cov_PLINK <- ifelse(SEX_cov==0, 2, SEX_cov)#

#
iter <- round(dim(geno_dat)[2]/chunk_size)#

gJLS2(GENO = geno_dat[,(1):(chunk_size)], Y = pheno_dat[,names(pheno_dat) %in% phenoNames[1]], SEX = SEX_cov_PLINK, COVAR = pheno_dat[,names(pheno_dat) %in% covarNames_use], Xchr=xchr)#

phenoNames#

phenoNames="pheno1"#

gJLS2(GENO = geno_dat[,(1):(chunk_size)], Y = pheno_dat[,names(pheno_dat) %in% phenoNames[1]], SEX = SEX_cov_PLINK, COVAR = pheno_dat[,names(pheno_dat) %in% covarNames_use], Xchr=xchr)#
#

GENO = geno_dat[,(1):(chunk_size)]#

Y = pheno_dat[,names(pheno_dat) %in% phenoNames[1]]#

Y#

gJLS2(GENO = geno_dat[,(1):(chunk_size)], Y = pheno_dat[,names(pheno_dat) %in% phenoNames[1]], SEX = SEX_cov_PLINK, COVAR = pheno_dat[,names(pheno_dat) %in% covarNames_use], Xchr=xchr)#
#
#

SEX = SEX_cov_PLINK#

SEX#

COVAR = pheno_dat[,names(pheno_dat) %in% covarNames_use]#

head(COVAR)#

COVAR#

gJLS2#

locReg(GENO = GENO, Y = Y, SEX = SEX, #
        COVAR = COVAR, Xchr = Xchr, XchrMethod = XchrMethod, #
        transformed = transformed, related = related, cov.structure = cov.structure, #
        clust = clust)#

complete.cases(geno_dat[,(1):(chunk_size)])#

length(pheno_dat[,names(pheno_dat) %in% phenoNames[1]])#

length(SEX_cov_PLINK)#

length(SEX_cov)#

SEX_cov#

dim(pheno_dat)#

head(pheno_dat)#

pheno_dat$#

head()#

head(pheno_dat)#

head(bg)#

class(bg)#

	SEX_cov <- pheno_dat[,names(pheno_dat) %in% covarNames][grepl("sex|SEX|Sex", covarNames)][,1]#

head(pheno_dat[,names(pheno_dat) %in% covarNames][grepl("sex|SEX|Sex", covarNames)])#

length(pheno_dat[,names(pheno_dat) %in% covarNames][grepl("sex|SEX|Sex", covarNames)])#

head(pheno_dat[,names(pheno_dat) %in% covarNames])#

grepl("sex|SEX|Sex", covarNames)#

head(covarNames)#

head(geno_dat)#

head(pheno_dat)#

if (x)#

``#

grepl("SEX", pheno_dat)#

grepl("SEX", names(pheno_dat))#

sum(grepl("SEX", names(pheno_dat)))#

	names(pheno_dat[grepl("SEX", names(pheno_dat)),])#

	names(pheno_dat[grepl("SEX", names(pheno_dat))])#

c("SEX", paste("SEX", 1:dim(pheno_dat[grepl("SEX", names(pheno_dat))])[2]))#

	names(pheno_dat[grepl("SEX", names(pheno_dat))]) <- c("SEX", paste("SEX", 1:(dim(pheno_dat[grepl("SEX", names(pheno_dat))])[2]-1), sep=""))#

 c("SEX", paste("SEX", 1:(dim(pheno_dat[grepl("SEX", names(pheno_dat))])[2]-1), sep=""))#

SEX_cov <- pheno_dat[,names(pheno_dat) %in% covarNames][grepl("sex|SEX|Sex", covarNames)]#
	covarNames_use <- covarNames[!grepl("sex|SEX|Sex", covarNames)]#
	SEX_cov_PLINK <- ifelse(SEX_cov==0, 2, SEX_cov)#

SEX_cov#

length(SEX_cov)#

head(pheno_dat[,names(pheno_dat) %in% covarNames])#

covarNames#

names(pheno_dat)#

	names(pheno_dat[grepl("SEX", names(pheno_dat))]) <- c("SEX", paste("SEX", 1:(dim(pheno_dat[grepl("SEX", names(pheno_dat))])[2]-1), sep=""))#

names(pheno_dat)#

head(pheno_dat)#

names(pheno_dat[grepl("SEX", names(pheno_dat))])#

c("SEX", paste("SEX", 1:(dim(pheno_dat[grepl("SEX", names(pheno_dat))])[2]-1), sep=""))#

	names(pheno_dat[grepl("SEX", names(pheno_dat))]) <- c("SEX", paste("SEX", 1:(dim(pheno_dat[grepl("SEX", names(pheno_dat))])[2]-1), sep=""))#

names(pheno_dat)#

names(pheno_dat[grepl("SEX", names(pheno_dat))])#

c("SEX", paste("SEX", 1:(dim(pheno_dat[grepl("SEX", names(pheno_dat))])[2]-1), sep=""))#

	names(pheno_dat[grepl("SEX", names(pheno_dat))]) <- c("SEX", paste("SEX", 1:(dim(pheno_dat[grepl("SEX", names(pheno_dat))])[2]-1), sep=""))#

names(pheno_dat)#

#
	names(pheno_dat)[grepl("SEX", names(pheno_dat))]#

	names(pheno_dat)[grepl("SEX", names(pheno_dat))] <- c("SEX", paste("SEX", 1:(dim(pheno_dat[grepl("SEX", names(pheno_dat))])[2]-1), sep=""));#

	names(pheno_dat)#

SEX_cov <- pheno_dat[,names(pheno_dat) %in% covarNames][grepl("sex|SEX|Sex", covarNames)]#
	covarNames_use <- covarNames[!grepl("sex|SEX|Sex", covarNames)]#
	SEX_cov_PLINK <- ifelse(SEX_cov==0, 2, SEX_cov)#

length(SEX_cov_PLINK)#

gJLS2(GENO = geno_dat[,(1):(chunk_size)], Y = pheno_dat[,names(pheno_dat) %in% phenoNames[1]], SEX = SEX_cov_PLINK, COVAR = pheno_dat[,names(pheno_dat) %in% covarNames_use], Xchr=xchr)#

dim(COVAR)#

COVAR#

length(COVAR)#

COVAR = pheno_dat[,names(pheno_dat) %in% covarNames_use]#

SEX = SEX_cov_PLINK#

Xchr=xchr#

locReg(GENO=GENO, Y = Y, SEX=SEX, COVAR=COVAR, Xchr=Xchr, XchrMethod = XchrMethod, transformed = transformed, related = related, cov.structure = cov.structure, clust = clust)#

locReg(GENO=GENO, Y = Y, SEX=SEX, COVAR=COVAR, Xchr=T)#
#

if (!("matrix" %in% class(GENO) | "data.frame" %in% class(GENO) | "list" %in% class(GENO) | "vector" %in% class(GENO) | "integer" %in% class(GENO) | "numeric" %in% class(GENO))){#
    stop("Please make sure the genotype data is an object of vector, matrix, data.frame for discrete genotypes or a list for dosage genotypes.")#
  }#
#

lapply(GENO, function(gg) tryCatch(locReg_per_SNP(geno_one = gg, SEX=SEX, Y=Y, COVAR = COVAR, Xchr=Xchr, XchrMethod = XchrMethod, transformed = transformed, related = related, cov.structure = cov.structure, clust = clust), error=function(e) NULL))#

dim(GENO)#

class(GENO)#

apply(GENO, 2, function(gg) tryCatch(locReg_per_SNP(geno_one = gg, SEX=SEX, Y=Y, COVAR = COVAR, Xchr=Xchr, XchrMethod = XchrMethod, transformed = transformed, related = related, cov.structure = cov.structure, clust = clust), error=function(e) NULL))#

apply(GENO, 2, function(gg) tryCatch(locReg_per_SNP(geno_one = gg, SEX=SEX, Y=Y, COVAR = COVAR, Xchr=Xchr), error=function(e) NULL))#
#

locReg_per_SNP(geno_one=GENO[,1], SEX=SEX, Y=Y, COVAR=COVAR)#

locReg_per_SNP(geno_one=GENO[,1], SEX=SEX, Y=Y, COVAR=COVAR)#
#

#
locReg_per_SNP <- function(geno_one, Y, SEX = NULL, COVAR = NULL, Xchr=FALSE, XchrMethod = 3, transformed=FALSE, related = FALSE, cov.structure = "corCompSymm", clust = NULL){#
#
  ## check minimal inputes: geno_one, Y, Xchr, XchrMethods, transformed#
  if (missing(geno_one))#
    stop("The Genotype input is missing.")#
  geno_one[geno_one==-9] <- NA#
#
  ## if genotype probability matrix#
  if (!is.null(dim(geno_one))){#
    geno_check <- dim(geno_one)[2]#
#
    if (geno_check > 3 | geno_check < 2){#
      stop("Please check the genotype input, the genotype probabilitie matrix should have three columns.")#
    } else {#
      geno_one_use <- as.numeric(as.matrix(geno_one)%*%c(0,1,2))#
    }#
  }#
#
  ## if not genotype probability matrix#
  if (is.null(dim(geno_one))){#
    geno_check <- is.vector(geno_one)|is.numeric(geno_one)|is.factor(geno_one)#
   if (!geno_check){#
     stop("Please check the genotype input, it should be of class vector, numeric or factor.")#
  } else {#
    geno_range <- diff(range(as.numeric(geno_one), na.rm=T))#
    if (geno_range>2)#
      stop("Please check the genotype values, the difference between the maximum and minimum genotype value should be less than 2.")#
  }#
    geno_one_use <- geno_one#
  }#
#
  if (missing(Y))#
    stop("The quantitative trait input is missing.")#
#
  if (class(Y)!="numeric")#
    stop("Please make sure the quantitaitve trait is a numeric vector.")#
#
  ## transform before adjust for covariates#
  if (transformed){#
    Y <- inver_norm(Y)#
  }#
#
  N <- length(Y)#
  COVAR_use <- NULL#
  ## Replaced by either COVAR, or COVAR, SEX#
  ## for autosome use COVAR_use, for X-chromosome use COVAR#
#
  if (!is.null(COVAR)){#
#
    if (is.null(dim(COVAR))){#
#
    if (length(geno_one_use)!=length(COVAR)|length(geno_one_use)!=length(Y)|length(Y)!=length(COVAR))#
      stop("Make sure the inputs have the same length.")#
#
    } else {#
#
      if (length(geno_one_use)!=dim(COVAR)[1]|length(geno_one_use)!=length(Y)|length(Y)!=dim(COVAR)[1])#
        stop("Make sure the inputs have the same length.")#
    }#
#
    ### if not for Xchr, we can treat SEX as part of covariate#
    if (!is.null(SEX) & !Xchr){#
#
      if (sum(SEX %in% c(1,2,NA))!=length(SEX))#
        stop("Please check the SEX variable, only 1, 2, and NA are plausible values.")#
#
      SEX[SEX==2] = 0#
#
      if (length(geno_one_use)!=length(SEX)|length(geno_one_use)!=length(Y)|length(Y)!=length(SEX))#
        stop("Make sure the inputs: SEX, Y, and geno_one have the same length.")#
#
      if (sum(SEX==1, na.rm= TRUE) == sum(!is.na(SEX))){#
        warning("Only Males detected")#
#
      } else if (sum(SEX==0, na.rm= TRUE) == sum(!is.na(SEX))) {#
#
        warning("Only Females detected")#
      }#
#
      COVAR_use <- cbind(COVAR, SEX)#
    }#
    }#
#
  ### if not for Xchr and no covariate, we can treat SEX as covariate#
  if (is.null(COVAR) & !is.null(SEX) & !Xchr){#
#
    if (sum(SEX %in% c(1,2,NA))!=length(SEX))#
      stop("Please check the SEX variable, only 1, 2, and NA are plausible values.")#
#
    SEX[SEX==2] = 0#
#
    if (length(geno_one_use)!=length(SEX)|length(geno_one_use)!=length(Y)|length(Y)!=length(SEX))#
      stop("Make sure the inputs: SEX, Y, and geno_one have the same length.")#
#
      if (sum(SEX==1, na.rm= TRUE) == sum(!is.na(SEX))){#
      warning("Only Males detected")#
#
      } else if (sum(SEX==0, na.rm= TRUE) == sum(!is.na(SEX))) {#
#
      warning("Only Females detected")#
    } else {#
#
      COVAR_use <- SEX#
    }#
    }#
#
### begin analysis of autosomes:#
#
if (!Xchr) {#
#
     if (length(table(geno_one_use))==1) {#
        warning("Monomorphic SNP detected, results will be set to N/A");#
        pval <- NA#
        names(pval) <- "p-value"#
#
        } else {#
#
        ## autosomal related / not related models:#
          if (!related){#
            ## if not related then analyze as usual#
#
            if (is.null(COVAR_use)){#
              ### no covariates:#
              use_dat <- complete.cases(geno_one_use, Y)#
              datafr <- data.frame("y" = Y[use_dat], "g" = geno_one_use[use_dat])#
              pval <- summary(lm(y ~ g, data=datafr))$coef[2,4]#
#
             } else {#
               ### covariates:#
               use_dat <- complete.cases(geno_one_use, Y, COVAR_use)#
               if (is.null(dim(COVAR_use))){#
                 datafr <- data.frame("y" = Y[use_dat], "g" = geno_one_use[use_dat], "covar" = COVAR_use[use_dat])#
               } else {#
                 datafr <- data.frame("y" = Y[use_dat], "g" = geno_one_use[use_dat], "covar" = COVAR_use[use_dat,])#
               }#
               pval <- summary(lm(as.formula(paste("y ~ g +", paste(names(datafr)[grepl("covar",names(datafr))], collapse = "+"))), data=datafr))$coef[2,4]#
             }#
#
          } else {#
#
            if (is.null(clust)) {#
              clust = rep(1, N)#
              warning("No cluster assignment was given, treating the samples as a single group.")#
            }#
            clust <- as.factor(clust)#
#
            if (missing(cov.structure))#
              stop("The cov.structure input is missing, should be one of the standard classes of correlation structures in corClasses. See ?nlme::corClasses for more details. The default option is corCompSymm.")#
#
            if (is.null(COVAR_use)){#
                use_dat <- complete.cases(geno_one_use, clust, Y)#
                datafr <- data.frame("y" = Y[use_dat], "g" = geno_one_use[use_dat], "clust" = clust[use_dat])#
                correlation_est = output_correlation(y = datafr$y, clust = datafr$clust, cov.structure = cov.structure)#
                fit <- nlme::gls(y~g, data=datafr, correlation=correlation_est, method="ML",control=lmeControl(opt = "optim"))#
                pval <- anova(fit,Terms=2)[1,3]#
             } else {#
#
               use_dat <- complete.cases(geno_one_use, Y, COVAR_use, clust)#
               if (is.null(dim(COVAR_use))){#
                 datafr <- data.frame("y" = Y[use_dat], "g" = geno_one_use[use_dat], "covar" = COVAR_use[use_dat], "clust" = clust[use_dat])#
               } else {#
                 datafr <- data.frame("y" = Y[use_dat], "g" = geno_one_use[use_dat], "covar" = COVAR_use[use_dat,], "clust" = clust[use_dat])#
               }#
               correlation_est = output_correlation(y = datafr$y, clust = datafr$clust, cov.structure = cov.structure)#
               fit <- nlme::gls(as.formula(paste("y ~ g +", paste(names(datafr)[grepl("covar",names(datafr))], collapse = "+"))), data=datafr, correlation=correlation_est, method="ML",control=lmeControl(opt = "optim"))#
               pval <- anova(fit,Terms=2)[1,3]#
             }#
          }#
#
## end of autosomal analysis#
        }#
#
## Xchr not related models:#
} else {#
#
if (length(table(geno_one_use))==1) {#
#
    warning("Monomorphic SNP detected, results will be set to N/A");#
    pval <- NA#
    names(pval) <- "p-value"#
#
  } else {#
#
  ### need to check if there is heterozygotes in discrete genotype for Xchr#
  if (length(unique(geno_one_use)) <= 4 & sum(geno_one_use == 1, na.rm=T) > 1){#
    imputed = FALSE#
  } else {#
    imputed = TRUE#
  }#
#
  if (is.null(SEX))#
    stop("The sex input is missing for X-chromosome analysis.")#
#
  if (sum(SEX %in% c(1,2,NA))!=length(SEX))#
    stop("Please check the SEX variable, only 1, 2, and NA are plausible values.")#
#
  SEX[SEX==2] = 0#
#
    if (is.null(COVAR)){#
    ## no covariates:#
#
        use_dat <- complete.cases(geno_one_use, SEX, Y)#
        datafr <- data.frame("y" = Y[use_dat], "g" = geno_one_use[use_dat], "sex" =  SEX[use_dat])#
#
        ### no covariates:#
        if (sum(SEX==1, na.rm=TRUE) == sum(!is.na(SEX))){#
          warning("Only Males detected")#
          p2 <- summary(lm(y~g, data=datafr[datafr$sex==1,]))$coef[2,4]#
          pval <- p2#
          names(pval) <- "model 1 (males)"#
#
        } else if (sum(SEX==0, na.rm=TRUE) == sum(!is.na(SEX))) {#
          warning("Only Females detected")#
          p1 <- summary(lm(y~g, data=datafr[datafr$sex==0,]))$coef[2,4]#
          pval <-p1#
          names(pval) <- "model 1 (females)"#
#
        } else {#
#
          if (!imputed){#
            ## heterzygote in females only#
              datafr$gD <- ifelse(datafr$g==1 & datafr$sex == 0, 1, 0)#
              p1 <- summary(lm(y~g, data=datafr[datafr$sex==0,]))$coef[2,4]#
              p2 <- summary(lm(y~g, data=datafr[datafr$sex==1,]))$coef[2,4]#
              m1 <- lm(y~sex+g+gD+g:sex, data=datafr)#
              m11 <- lm(y~sex+g+g:sex, data=datafr)#
              m2 <- lm(y~sex, data=datafr)#
              p_val_01 <- anova(m11, m2)[2,6]#
              p_val_02 <- anova(m1, m2)[2,6]#
#
              pval_Xchr <-c(p1, p2, p_val_01, p_val_02)#
              names(pval_Xchr) <- c("model 1 (females)", "model 1 (males)", "model 2", "gL")#
#
              if (XchrMethod == 0) {#
                pval <- pval_Xchr#
              } else if (XchrMethod == 1) {#
                pval <- pval_Xchr[1:2]#
              } else if (XchrMethod == 2) {#
                pval <- pval_Xchr[3]#
              } else if (XchrMethod == 3) {#
                pval <- pval_Xchr[4]#
              }#
#
              } else {#
#
              ## imputed: but in dosage values (models 1,2 only)#
              if (is.null(dim(geno_one))){#
#
                p1 <- summary(lm(y~g, data=datafr[datafr$sex==0,]))$coef[2,4]#
                p2 <- summary(lm(y~g, data=datafr[datafr$sex==1,]))$coef[2,4]#
                m11 <- lm(y~sex+g+g:sex, data=datafr)#
                m2 <- lm(y~sex, data=datafr)#
                p_val_01 <- anova(m11, m2)[2,6]#
#
                pval_Xchr <-c(p1, p2, p_val_01)#
                names(pval_Xchr) <- c("model 1 (females)", "model 1 (males)", "gL")#
#
                if (XchrMethod == 0) {#
                  pval <- pval_Xchr#
                } else if (XchrMethod == 1) {#
                  pval <- pval_Xchr[1:2]#
                } else if (XchrMethod == 2) {#
                  pval <- pval_Xchr[3]#
                }#
#
                if (XchrMethod == 3 & imputed){#
                  warning("For X-chromosome analysis, dosage genotypes will be analyzed using either method 1 (females only) or method 2 (no non-additive component)")#
                  warning("Returning results for method 1 and 2...")#
                  pval <- pval_Xchr#
                }#
#
              } else {#
#
                use_dat <- complete.cases(geno_one_use, SEX, Y, geno_one)#
                datafr <- data.frame("y" = Y[use_dat], "g" = geno_one_use[use_dat], "g1" = geno_one[use_dat, 2], "g2" = geno_one[use_dat, 3], "sex" =  SEX[use_dat])#
#
                p1 <- summary(lm(y~g, data=datafr[datafr$sex==0,]))$coef[2,4]#
                p2 <- summary(lm(y~g, data=datafr[datafr$sex==1,]))$coef[2,4]#
                m11 <- lm(y~sex+g+g:sex, data=datafr)#
                m2 <- lm(y~sex, data=datafr)#
                m1 <- lm(y~sex+g1+g2+g1:sex, data=datafr)#
                p_val_02 <- anova(m1, m2)[2,6]#
                p_val_01 <- anova(m11, m2)[2,6]#
#
                pval_Xchr <-c(p1, p2, p_val_01)#
                names(pval_Xchr) <- c("model 1 (females)", "model 1 (males)", "model 2", "gL")#
#
                if (XchrMethod == 0) {#
                  pval <- pval_Xchr#
                } else if (XchrMethod == 1) {#
                  pval <- pval_Xchr[1:2]#
                } else if (XchrMethod == 2) {#
                  pval <- pval_Xchr[3]#
                } else if (XchrMethod == 3) {#
                  pval <- pval_Xchr[4]#
                }#
#
              }#
#
            }#
        }#
#
    } else {#
    ## yes covariates:#
      use_dat <- complete.cases(geno_one_use, SEX, Y, COVAR)#
        if (is.null(dim(COVAR))){#
          datafr <- data.frame("y" = Y[use_dat], "g" = geno_one_use[use_dat], "covar" = COVAR[use_dat], "sex" = SEX[use_dat])#
          } else {#
        datafr <- data.frame("y" = Y[use_dat], "g" = geno_one_use[use_dat], "covar" = COVAR[use_dat,], "sex" = SEX[use_dat])#
          }#
#
        if (sum(SEX==1,na.rm=TRUE) == sum(!is.na(SEX))){#
          warning("Only Males detected")#
          p2 <- summary(lm(as.formula(paste("y ~ g +", paste(names(datafr)[grepl("covar",names(datafr))], collapse = "+"))), data=datafr))$coef[2,4]#
          pval <- p2#
          names(pval) <- "model 1 (males)"#
#
        } else if (sum(SEX==0,na.rm=TRUE) == sum(!is.na(SEX))) {#
          warning("Only Females detected")#
          p1 <- summary(lm(as.formula(paste("y ~ g +", paste(names(datafr)[grepl("covar",names(datafr))], collapse = "+"))), data=datafr))$coef[2,4]#
          pval <-p1#
          names(pval) <- "model 1 (females)"#
#
        } else {#
#
          if (!imputed){#
#
           ## heterzygote in females only#
          datafr$gD <- ifelse(datafr$g==1 & datafr$sex == 0, 1, 0)#
#
            p1 <- summary(lm(as.formula(paste("y ~ g +", paste(names(datafr[datafr$sex==0,])[grepl("covar",names(datafr[datafr$sex==0,]))], collapse = "+"))), data=datafr[datafr$sex==0,]))$coef[2,4]#
            p2 <- summary(lm(as.formula(paste("y ~ g +", paste(names(datafr[datafr$sex==1,])[grepl("covar",names(datafr[datafr$sex==1,]))], collapse = "+"))), data=datafr[datafr$sex==1,]))$coef[2,4]#
            m1 <- lm(as.formula(paste("y ~ sex+g+gD+g:sex + ", paste(names(datafr)[grepl("covar",names(datafr))], collapse = "+"))), data=datafr)#
            m11 <- lm(as.formula(paste("y ~ sex+g+g:sex + ", paste(names(datafr)[grepl("covar",names(datafr))], collapse = "+"))), data=datafr)#
            m2 <- lm(as.formula(paste("y ~ sex + ", paste(names(datafr)[grepl("covar",names(datafr))], collapse = "+"))), data=datafr)#
            p_val_01 <- anova(m11, m2)[2,6]#
            p_val_02 <- anova(m1, m2)[2,6]#
#
            pval_Xchr <-c(p1, p2, p_val_01, p_val_02)#
            names(pval_Xchr) <- c("model 1 (females)", "model 1 (males)", "model 2", "gL")#
#
            if (XchrMethod == 0) {#
              pval <- pval_Xchr#
            } else if (XchrMethod == 1) {#
              pval <- pval_Xchr[1:2]#
            } else if (XchrMethod == 2) {#
              pval <- pval_Xchr[3]#
            } else if (XchrMethod == 3) {#
              pval <- pval_Xchr[4]#
            }#
#
          } else {#
#
            ## imputed: but in dosage values (models 1,2 only)#
            if (is.null(dim(geno_one))){#
#
              p1 <- summary(lm(as.formula(paste("y ~ g +", paste(names(datafr[datafr$sex==0,])[grepl("covar",names(datafr[datafr$sex==0,]))], collapse = "+"))), data=datafr[datafr$sex==0,]))$coef[2,4]#
              p2 <- summary(lm(as.formula(paste("y ~ g +", paste(names(datafr[datafr$sex==1,])[grepl("covar",names(datafr[datafr$sex==1,]))], collapse = "+"))), data=datafr[datafr$sex==1,]))$coef[2,4]#
              m11 <- lm(as.formula(paste("y ~ sex+g+g:sex + ", paste(names(datafr)[grepl("covar",names(datafr))], collapse = "+"))), data=datafr)#
              m2 <- lm(as.formula(paste("y ~ sex + ", paste(names(datafr)[grepl("covar",names(datafr))], collapse = "+"))), data=datafr)#
              p_val_01 <- anova(m11, m2)[2,6]#
#
              pval_Xchr <-c(p1, p2, p_val_01)#
              names(pval_Xchr) <- c("model 1 (females)", "model 1 (males)", "gL")#
#
              if (XchrMethod == 0) {#
                pval <- pval_Xchr#
              } else if (XchrMethod == 1) {#
                pval <- pval_Xchr[1:2]#
              } else if (XchrMethod == 2) {#
                pval <- pval_Xchr[3]#
              }#
#
              if (XchrMethod == 3 & imputed){#
                warning("For X-chromosome analysis, dosage genotypes will be analyzed using either method 1 (females only) or method 2 (no non-additive component)")#
                warning("Returning results for method 1 and 2...")#
                pval <- pval_Xchr#
              }#
#
            } else {#
#
              use_dat <- complete.cases(geno_one_use, SEX, Y, geno_one, COVAR)#
              datafr <- data.frame("y" = Y[use_dat], "g" = geno_one_use[use_dat], "g1" = geno_one[use_dat, 2], "g2" = geno_one[use_dat, 3], "sex" =  SEX[use_dat], "covar" = COVAR[use_dat])#
#
              p1 <- summary(lm(as.formula(paste("y ~ g +", paste(names(datafr[datafr$sex==0,])[grepl("covar",names(datafr[datafr$sex==0,]))], collapse = "+"))), data=datafr[datafr$sex==0,]))$coef[2,4]#
              p2 <- summary(lm(as.formula(paste("y ~ g +", paste(names(datafr[datafr$sex==1,])[grepl("covar",names(datafr[datafr$sex==1,]))], collapse = "+"))), data=datafr[datafr$sex==1,]))$coef[2,4]#
              m11 <- lm(as.formula(paste("y ~ sex+g+g:sex + ", paste(names(datafr)[grepl("covar",names(datafr))], collapse = "+"))), data=datafr)#
              m2 <- lm(as.formula(paste("y ~ sex + ", paste(names(datafr)[grepl("covar",names(datafr))], collapse = "+"))), data=datafr)#
              m1 <- lm(as.formula(paste("y ~ sex+g1+g2+g1:sex + ", paste(names(datafr)[grepl("covar",names(datafr))], collapse = "+"))), data=datafr)#
              p_val_02 <- anova(m1, m2)[2,6]#
              p_val_01 <- anova(m11, m2)[2,6]#
#
              pval_Xchr <-c(p1, p2, p_val_01, p_val_02)#
              names(pval_Xchr) <- c("model 1 (females)", "model 1 (males)", "model 2", "gL")#
#
              if (XchrMethod == 0) {#
                pval <- pval_Xchr#
              } else if (XchrMethod == 1) {#
                pval <- pval_Xchr[1:2]#
              } else if (XchrMethod == 2) {#
                pval <- pval_Xchr[3]#
              } else if (XchrMethod == 3) {#
                pval <- pval_Xchr[4]#
              }#
#
            }#
#
#
#
          }#
        }#
}#
#
}#
#
}#
## end of analysis#
  return(pval)#
}#

locReg_per_SNP(geno_one=GENO[,1], SEX=SEX, Y=Y, COVAR=COVAR)#
#
#

 SEX#

head(SEX)#

locReg_per_SNP(geno_one=GENO[,1], SEX= SEX_cov_PLINK, Y=Y, COVAR=COVAR)#
#
#
#

table(SEX_cov_PLINK)#

SEX_cov_PLINK#

	SEX_cov <- pheno_dat[,names(pheno_dat) %in% covarNames][grepl("sex|SEX|Sex", covarNames)][,1]#

SEX_cov#

SEX_cov <- as.integer(pheno_dat[,names(pheno_dat) %in% covarNames][grepl("sex|SEX|Sex", covarNames)][,1])#
	covarNames_use <- covarNames[!grepl("sex|SEX|Sex", covarNames)]#
	SEX_cov_PLINK <- ifelse(SEX_cov==0, 2, SEX_cov)#

SEX_cov_PLINK#

gJLS2(GENO = geno_dat[,(1):(chunk_size)], Y = pheno_dat[,names(pheno_dat) %in% phenoNames[1]], SEX = SEX_cov_PLINK, COVAR = pheno_dat[,names(pheno_dat) %in% covarNames_use], Xchr=xchr)#

locReg_per_SNP(geno_one=GENO[,1], SEX= SEX_cov_PLINK, Y=Y, COVAR=COVAR)#
#
#
#
#

SEX_cov_PLINK#

pheno_dat[,names(pheno_dat) %in% covarNames_use]#

pheno_dat[,names(pheno_dat) %in% phenoNames[1]]#

gJLS2(GENO = geno_dat[,(1):(chunk_size)], Y = pheno_dat[,names(pheno_dat) %in% phenoNames[1]], SEX = SEX_cov_PLINK, COVAR = pheno_dat[,names(pheno_dat) %in% covarNames_use], Xchr=xchr)#

  suppressWarnings(locP <- locReg(GENO=GENO, Y = Y, SEX=SEX, COVAR=COVAR, Xchr=Xchr, XchrMethod = XchrMethod, transformed = transformed, related = related, cov.structure = cov.structure, clust = clust))#
#

  suppressWarnings(locP <- locReg(GENO=GENO, Y = Y, SEX=SEX, COVAR=COVAR, Xchr=Xchr))#
#
#

apply(GENO, 2, function(gg) tryCatch(locReg_per_SNP(geno_one = gg, SEX=SEX, Y=Y, COVAR = COVAR, Xchr=Xchr)#

)#

apply(GENO, 2, function(gg) tryCatch(locReg_per_SNP(geno_one = gg, SEX=SEX, Y=Y, COVAR = COVAR, Xchr=Xchr, XchrMethod = XchrMethod, transformed = transformed, related = related, cov.structure = cov.structure, clust = clust), error=function(e) NULL))#

apply(GENO, 2, function(gg) locReg_per_SNP(geno_one = gg, SEX=SEX, Y=Y, COVAR = COVAR, Xchr=Xchr))#
#

apply(GENO, 2, function(gg) locReg_per_SNP(geno_one = gg, SEX= SEX_cov_PLINK, Y=Y, COVAR = COVAR, Xchr=Xchr))#
#
#

dim(GENO)#

table(GENO[,5])#

table(GENO[,4])#
#

table(GENO[,3])#
#
#

table(GENO[,2])#
#
#
#

table(GENO[,1])#
#
#
#
#

head(GENO)#

bimf="./input/chrX_5_snp"#

#
require("BGData")#
require("BEDMatrix")#
bedFiles <- BEDMatrix(bimf)#
#
#
cat(paste("linking phenotype file", phenof, "\n"))#
#
bg <- as.BGData(bedFiles, alternatePhenotypeFile = paste0(phenof))#
	#
## CHECKING ALL INPUT FILES AGAIN:#
#
pheno_dat <- pheno(bg)#
geno_dat <- geno(bg)#

#
if (sum(grepl("SEX", names(pheno_dat))>1)){#
	names(pheno_dat)[grepl("SEX", names(pheno_dat))] <- c("SEX", paste("SEX", 1:(dim(pheno_dat[grepl("SEX", names(pheno_dat))])[2]-1), sep=""));#
}#
#

head(pheno_dat)#

sum(grepl("SEX", names(pheno_dat))>1)#

grepl("SEX", names(pheno_dat)#

)#

#
if (sum(grepl("SEX", names(pheno_dat)))>1){#
	names(pheno_dat)[grepl("SEX", names(pheno_dat))] <- c("SEX", paste("SEX", 1:(dim(pheno_dat[grepl("SEX", names(pheno_dat))])[2]-1), sep=""));#
}#
#

#
	SEX_cov <- as.integer(pheno_dat[,names(pheno_dat) %in% covarNames][grepl("sex|SEX|Sex", covarNames)][,1])#
	covarNames_use <- covarNames[!grepl("sex|SEX|Sex", covarNames)]#
	SEX_cov_PLINK <- ifelse(SEX_cov==0, 2, SEX_cov)#

SEX_cov_PLINK#

iter <- round(dim(geno_dat)[2]/chunk_size)#

gJLS2(GENO = geno_dat[,(1):(chunk_size)], Y = pheno_dat[,names(pheno_dat) %in% phenoNames[1]], SEX = SEX_cov_PLINK, COVAR = pheno_dat[,names(pheno_dat) %in% covarNames_use], Xchr=xchr)#

#
final_output <- gJLS2(GENO = geno_dat[,(1):(chunk_size)], Y = pheno_dat[,names(pheno_dat) %in% phenoNames[1]], SEX = SEX_cov_PLINK, COVAR = pheno_dat[,names(pheno_dat) %in% covarNames_use], Xchr=xchr)#

final_output#

write.table(final_output, file = out, col.names=T, row.names=F, quote=F, sep="\t")#

round(dim(geno_dat)[2]/chunk_size)#

n <- 473#
PHENO <- c( 0.666537, -0.256522, 0.290114, -0.452893, -2.28857, -0.232636, 0.800221, 1.48044, 0.377028, 2.50429, 0.675883, 0.317467, -1.42201, 0.342524, 0.403393, -0.286885, -0.238145, -1.02134, 2.4579, -0.115632, 0.218606, -0.688359, -0.352018, -1.12837, -0.259445, 1.73859, -0.526179, -0.931399, -0.341193, -1.58203, -0.551092, -1.09044, -0.248153, -1.68381, -1.37746, -0.816525, -0.862841, -0.722664, -0.688148, -0.389165, -0.251724, -1.00614, -1.08931, 1.27015, -0.698941, 1.23328, -0.32917, 0.920677, -1.87026, -0.182504, -2.34188, -1.59576, 0.981771, -1.10049, -0.67118, 0.718607, -0.439402, 1.64348, 1.1206, 1.74593, -0.557819, -0.1292, 1.61446, 1.43891, 0.00325928, 1.11561, 1.60207, -1.03247, 0.0391209, 1.07499, 0.967503, -1.21997, 0.150617, -1.47335, 0.230273, -2.17245, 0.18998, -1.00531, 0.0609993, 0.638358, -0.150534, 1.15954, 1.92048, -0.396279, 0.336593, -0.371496, 0.789005, -0.0786893, 0.0117589, -0.985539, -0.628819, -0.0080698, 1.05709, 1.00879, -2.38117, -0.330654, 0.862335, 1.08857, 0.568075, 0.711682, 0.27438, -0.443827, -1.25801, 0.347125, -0.634353, 0.190603, -1.42967, -2.42323, 1.7922, 1.29022, 1.20306, -0.268693, -0.510583, -0.731798, 0.343507, 0.980198, -0.849006, -0.648147, 0.69297, 0.225111, -1.18799, 1.1724, 0.530783, 0.788722, 0.836008, 1.17338, 0.750267, -0.391343, -0.0788484, 1.35006, 0.610608, 0.661396, 0.0036527, 1.27952, -0.134024, 0.0872634, 0.919802, 1.16899, 2.02702, 0.77182, -0.208491, -0.165282, 1.36708, 1.25725, -0.547889, -0.454878, 1.71631, -1.48533, -1.20665, 0.930644, -1.02213, 1.6719, 0.105848, -0.91762, -1.24615, 0.0824963, -0.0757767, -1.63206, 1.0482, -2.78085, -0.143879, 1.27065, -1.58476, 1.14966, 0.465763, 0.306873, 1.79117, 2.61482, -0.164551, 0.931886, -0.291523, -1.822, 1.02032, -0.931264, 0.7305, -0.699678, 0.517055, 0.602188, -0.0646054, 0.229335, 0.775538, -0.496371, -1.44319, -0.0191174, -0.96926, 2.10768, 0.409081, 0.219075, -0.194313, -1.68546, 0.146844, -0.447061, -0.800251, -0.529615, -0.241107, 0.875146, 1.68597, 0.386525, 2.47889, -0.00539019, -1.25736, -0.113408, 0.145854, -0.1585, 0.149579, 0.53184, 1.60225, -0.690488, -1.33206, 1.33693, 0.159196, -0.100678, 0.826672, 0.226286, 1.13104, -0.277369, -0.10367, 1.14711, -0.468173, 1.43018, 0.39753, 1.28441, 0.961681, -0.098608, 0.0342336, -0.614537, -1.6827, -0.249792, 0.572969, -1.3552, 0.925011, 0.651304, 0.217699, 0.284754, 0.0575699, -0.369445, 0.60291, 0.0873355, -2.14882, 0.90515, 0.203703, 0.748592, 0.204728, -0.96222, 1.96405, -1.28984, -0.823055, 1.31258, 0.669437, 0.070309, 0.00140624, -0.46675, 2.10756, 0.0997253, 1.33199, -0.834362, -0.827605, -1.7954, -0.0052171, -0.41189, -0.816649, 0.399307, 0.785534, 1.40784, -1.05357, 1.5207, -0.187636, 0.604549, 0.0597119, -1.36328, 0.847996, -1.06428, 1.08348, -0.867985, -0.669257, -1.35413, -0.543846, -0.615134, 1.43234, 1.20585, -1.20306, -0.468888, -0.0724705, 1.23993, -2.29179, 0.882359, -0.524884, 0.962775, -0.0501707, -0.5994, 0.824427, -0.422439, 0.247508, -1.80528, 1.32791, 0.770135, -0.72181, -1.83923, 2.23626, 1.34858, 1.11512, -0.982056, -0.471302, 0.907746, -0.826937, -0.635285, -0.673321, 0.247886, 1.86993, 0.600842, 0.0446033, 0.882688, -0.421287, -0.250248, 0.248411, -0.266401, 1.66102, 0.181515, -0.658579, 1.07432, 0.320226, -0.529774, -0.21853, -0.218699, -0.567883, 0.817648, 0.0874963, 0.594288, -0.667173, -0.228229, -0.339962, -0.118469, 0.87284, 0.637978, -0.335834, -1.08498, -1.10852, 1.35566, 0.65536, 0.429399, -1.34048, -1.57221, -0.00107191, -0.148381, 0.449731, 0.702571, -0.673714, -1.27623, 0.158092, -1.27662, 0.444079, -0.194106, -0.302213, -0.0912695, 0.598108, 0.596817, 0.245974, -0.999034, 0.940168, -0.817109, 0.402502, 1.18496, 0.184553, 1.55037, -0.682319, 1.43454, -0.937981, -1.23337, -1.09028, 0.323302, -1.73737, -1.8853, 0.366547, 0.768453, -0.498711, -0.473773, -1.4306, 0.810088, 0.597922, 0.0879727, -0.291047, 0.0138401, 0.847501, -0.4784, -0.49329, 0.262384, -0.487744, -2.22824, -0.215214, -1.68249, -1.82086, 0.264771, 1.63594, 0.536924, -0.82988, -0.447285, -0.631192, 1.19307, -1.46475, 0.553069, -0.410094, 0.71017, -0.184211, 0.887549, -0.161587, 1.41416, -1.83476, 0.298091, 1.38064, -0.384588, -0.284485, -1.40216, 0.534567, -0.475698, 0.767927, 0.354133, -0.314222, 0.180091, -1.18159, -0.776464, 0.949988, -0.449878, 0.2445, -0.651515, 0.144575, -0.42994, 0.538492, 0.459041, -1.57185, 0.749158, 0.242087, -0.601863, -0.65759, 1.56884, -0.260234, -0.465476, -0.60674, -0.608382, -0.343815, 0.125232, -0.272477, -0.831907, 0.183424, -0.676776, -0.720215, -0.819972, 0.352407, -0.372409, 1.11545, -0.475154, 0.931943, 1.40878, 0.798526, -0.144414, -0.947041, -1.28091, -0.869662, 1.08869, -1.09109, -1.36822, -0.403656, -0.829387, -0.296108, -0.205203, -0.124133, 0.976185, -0.954632, -0.176223, -1.19286, 0.31053, -0.404452, -1.76197, -0.304744 ) #
c <- c( 1, 2, 1, 0.938569, 2, 1, 1, -0.306474, 1, 1, 1, -0.415108, 2, 2, 2, 0.775634, 1, 0, 1, -0.49123, 1, 2, 1, -0.956227, 1, 2, 1, 1.12952, 2, 4, 2, -0.734834, 2, 1, 1, -0.874534, 2, 3, 1, 0.137457, 2, 3, 1, -0.681996, 1, 0, 1, 1.21187, 1, 1, 1, -1.54067, 1, 2, 1, 0.733867, 2, 3, 0, 0.529691, 1, 0, 1, 0.102537, 2, 2, 1, 1.70592, 1, 3, 0, 0.87981, 2, 2, 0, 1.76709, 1, 4, 1, -1.45478, 1, 3, 1, -0.685174, 2, 1, 1, 1.47871, 1, 1, 1, 0.503326, 2, 1, 2, 0.377213, 2, 2, 0, 0.275404, 1, 1, 1, 0.897782, 1, 2, 1, -0.0467662, 2, 2, 2, 1.52489, 2, 0, 0, 1.26811, 1, 3, 2, -1.36696, 2, 3, 1, -1.63984, 2, 1, 2, 0.571195, 1, 0, 0, -1.05753, 1, 3, 0, 0.408482, 2, 2, 1, -0.378233, 2, 1, 1, -0.212862, 2, 3, 2, 2.20164, 1, 3, 0, 0.237848, 2, 1, 0, 0.273791, 1, 2, 0, 0.357439, 1, 1, 1, 1.48267, 2, 1, 2, -0.454714, 2, 1, 1, -2.03404, 1, 1, 1, -0.285863, 2, 2, 1, 0.0331227, 2, 1, 1, 0.699747, 1, 1, 0, -0.311191, 2, 2, 0, 2.12062, 1, 0, 0, 0.579193, 2, 1, 0, 1.70053, 1, 2, 1, -0.241829, 2, 2, 1, -0.454039, 1, 0, 1, -0.499457, 2, 2, 1, -0.960798, 2, 0, 0, -1.55312, 1, 2, 0, 0.807396, 2, 2, 1, 0.478277, 1, 3, 0, 0.317694, 2, 2, 1, 1.18838, 1, 1, 0, -0.305744, 2, 2, 0, -2.31375, 1, 1, 1, 0.237094, 2, 1, 1, -1.31747, 1, 1, 1, 1.80473, 2, 0, 0, 0.00751206, 1, 3, 0, -1.67706, 2, 2, 1, 0.234326, 1, 0, 1, -1.42578, 2, 0, 2, -0.123367, 1, 2, 0, 1.02899, 2, 1, 0, 0.978792, 1, 1, 0, -0.661722, 2, 1, 2, 1.22167, 1, 3, 0, 1.37423, 2, 4, 1, -3.00283, 1, 2, 1, 0.0351281, 2, 2, 2, 1.37148, 1, 1, 1, 1.10732, 2, 2, 1, 1.42258, 1, 2, 2, -0.0379101, 2, 1, 0, 0.506697, 1, 2, 0, 1.61756, 2, 2, 1, -1.10821, 1, 1, 2, -0.857646, 1, 0, 1, 0.0108843, 2, 1, 1, -0.514399, 1, 4, 1, -0.388987, 2, 0, 0, 0.175281, 2, 2, 1, 1.13086, 1, 3, 0, 1.32948, 1, 2, 2, 2.72556, 1, 1, 0, -0.439078, 2, 1, 0, 0.28406, 1, 1, 0, -1.33579, 2, 3, 1, -1.55355, 2, 3, 1, -0.8649, 2, 2, 1, 0.663028, 1, 3, 0, 0.597122, 2, 2, 0, -0.709464, 1, 2, 0, 0.0373456, 1, 2, 1, -0.279996, 2, 2, 1, -0.47832, 1, 2, 0, 1.61585, 1, 3, 1, -0.668314, 1, 1, 1, 0.908001, 2, 0, 1, -0.204133, 2, 2, 1, 1.1133, 1, 1, 1, -0.37567, 1, 1, 1, -1.89147, 1, 1, 1, -1.47062, 1, 1, 2, 1.31797, 1, 1, 0, 0.710049, 1, 1, 1, -0.333783, 2, 1, 0, -0.268362, 1, 0, 1, 0.94759, 2, 2, 1, -0.0150143, 2, 1, 1, -0.4199, 2, 1, 1, 0.620089, 2, 2, 2, -0.931959, 1, 2, 1, 0.222506, 2, 0, 1, 0.317159, 2, 2, 0, 1.54253, 1, 0, 1, -0.717849, 2, 1, 0, 0.119223, 1, 2, 1, 1.07918, 2, 0, 1, 1.01807, 2, 2, 0, 0.0237622, 1, 4, 2, -1.91456, 2, 3, 1, 0.346631, 1, 1, 0, -0.122485, 1, 2, 0, -1.72588, 1, 3, 1, -1.46416, 1, 4, 0, -1.03457, 1, 3, 1, -0.290567, 1, 1, 2, -1.17177, 1, 1, 1, 0.379777, 1, 0, 1, 0.441569, 2, 2, 0, 0.015288, 1, 3, 2, -0.256996, 1, 2, 1, -0.945534, 1, 0, 1, 0.242926, 1, 2, 0, -0.38647, 2, 0, 0, 1.71964, 2, 3, 1, 0.222824, 2, 2, 1, 1.26537, 2, 0, 1, -0.888453, 2, 3, 0, -1.16581, 2, 2, 1, -1.98087, 2, 3, 1, -0.0568749, 2, 1, 1, -0.769328, 1, 0, 0, -0.442425, 1, 1, 1, 0.160883, 1, 1, 1, -0.597591, 1, 2, 1, -0.751318, 1, 2, 1, -0.0693318, 1, 1, 1, -0.421513, 1, 0, 0, -0.822204, 1, 3, 0, -0.264851, 1, 0, 2, -0.470105, 2, 3, 0, -1.14109, 2, 0, 0, -0.603301, 2, 2, 2, 1.30548, 1, 1, 1, -0.338368, 2, 1, 2, 0.480282, 2, 1, 0, 0.30697, 2, 2, 1, -1.07165, 2, 1, 1, -0.810446, 2, 3, 1, 1.31896, 1, 0, 1, -0.368548, 1, 3, 1, 0.385013, 1, 2, 0, -0.756, 2, 1, 1, -1.0354, 2, 0, 2, -0.334714, 1, 2, 2, -2.49432, 1, 4, 2, 0.852943, 2, 0, 0, -0.0855086, 2, 3, 0, -2.4809, 2, 3, 1, 0.812568, 1, 3, 1, 1.39797, 2, 2, 0, 0.376028, 2, 4, 1, -1.12837, 2, 0, 1, 0.195117, 1, 1, 1, -0.103994, 2, 2, 0, -1.50525, 2, 4, 1, 1.87211, 2, 1, 0, -0.16116, 1, 1, 1, 0.682792, 1, 2, 1, 2.18724, 2, 2, 0, 0.404773, 1, 2, 0, 0.898165, 2, 1, 1, 1.53112, 2, 3, 0, -1.6114, 1, 0, 0, -0.715641, 2, 3, 1, 1.54457, 1, 0, 1, -0.465728, 2, 2, 1, 1.27029, 2, 2, 1, 1.12219, 2, 0, 1, -0.4707, 1, 0, 1, -0.62536, 1, 0, 1, -0.881278, 1, 3, 0, 0.23956, 2, 3, 2, 0.28226, 2, 2, 2, 0.486611, 1, 1, 2, 0.0138067, 2, 2, 1, 1.71503, 2, 2, 1, -0.449057, 1, 3, 1, -0.763582, 2, 1, 0, 0.0395823, 1, 0, 0, -1.33326, 1, 1, 0, 0.877247, 2, 2, 0, 0.172325, 2, 2, 2, -0.424646, 2, 3, 1, 1.16126, 2, 2, 1, -0.266127, 2, 1, 1, -1.45879, 1, 2, 1, 0.042785, 2, 1, 1, -1.52276, 2, 1, 0, 0.897778, 1, 1, 0, 0.343146, 2, 1, 1, 1.06875, 2, 1, 1, 1.90646, 2, 3, 0, -2.02947, 1, 4, 0, 0.4217, 2, 1, 0, 0.0200469, 2, 3, 1, -1.60541, 2, 1, 1, -2.17663, 2, 2, 0, 0.142678, 1, 1, 1, 0.0601808, 1, 1, 1, -0.435551, 2, 0, 1, -0.908955, 1, 0, 0, 0.745888, 2, 1, 1, -0.946426, 1, 2, 0, 1.1379, 1, 3, 0, -0.477828, 2, 3, 1, -1.4074, 2, 3, 1, 0.211411, 1, 2, 0, 0.893032, 2, 2, 1, 0.278394, 2, 2, 0, 0.772619, 2, 1, 1, -0.48056, 1, 3, 0, -1.17363, 2, 0, 0, 2.31868, 2, 2, 1, -0.345014, 2, 1, 0, 0.0695355, 2, 1, 2, -1.06782, 1, 2, 1, -0.14133, 1, 2, 2, -0.0678552, 2, 2, 0, -0.757191, 2, 2, 0, -0.416991, 2, 0, 2, -0.0661859, 1, 1, 0, -0.110033, 2, 0, 1, -1.44121, 2, 0, 1, -0.467056, 1, 1, 0, 0.873922, 1, 1, 1, 0.37696, 1, 3, 2, 0.526565, 2, 1, 1, 0.590829, 1, 3, 0, -0.186455, 2, 0, 1, -0.818687, 2, 1, 2, -0.224611, 2, 4, 1, -0.20111, 2, 1, 1, -0.16391, 2, 1, 1, -1.10106, 1, 3, 0, 0.362177, 2, 2, 0, -0.377406, 2, 2, 1, 2.61553, 1, 0, 1, -0.902186, 1, 2, 0, -0.0666117, 2, 0, 1, 0.290437, 1, 2, 1, 0.841083, 2, 2, 0, 1.38788, 1, 2, 1, -1.36864, 2, 2, 1, 0.476794, 1, 1, 1, 0.674896, 2, 0, 2, 0.210569, 1, 0, 1, -0.590493, 2, 0, 1, 0.64689, 1, 1, 0, -0.222131, 2, 2, 0, 0.151584, 1, 2, 2, 1.74394, 2, 3, 1, -0.405964, 1, 1, 0, -1.4426, 2, 3, 2, 0.540315, 1, 3, 2, 0.993882, 2, 0, 1, 0.645227, 1, 1, 0, 0.886566, 2, 1, 1, -0.181236, 1, 1, 1, -1.97382, 2, 0, 1, 1.62243, 1, 3, 0, 0.0950584, 2, 1, 1, -0.110448, 1, 1, 1, -0.69523, 2, 1, 1, 0.223127, 1, 1, 1, 1.57817, 2, 3, 2, 2.06202, 1, 2, 1, 0.723832, 2, 0, 2, 2.55229, 2, 0, 0, 0.464548, 1, 1, 0, -0.196195, 1, 2, 0, -1.28282, 2, 1, 1, 0.32928, 2, 2, 0, -0.410446, 1, 2, 1, -0.902125, 1, 3, 2, -0.42964, 2, 1, 2, -0.221119, 1, 0, 1, -0.496013, 2, 1, 0, -0.872393, 2, 2, 0, 1.45406, 1, 3, 1, 0.0228697, 1, 0, 1, 0.684446, 2, 0, 1, 0.459324, 2, 1, 1, -0.0577171, 1, 2, 0, 1.93752, 2, 3, 0, -0.120002, 1, 1, 1, 1.22605, 2, 2, 2, -0.173422, 1, 3, 2, 0.762794, 2, 0, 1, -0.689536, 1, 0, 1, -1.51907, 2, 2, 1, -0.454563, 1, 2, 1, -0.792419, 2, 0, 1, 1.14443, 1, 0, 0, 1.22576, 2, 1, 0, -0.610409, 1, 0, 0, -1.78959, 2, 4, 1, 2.01307, 1, 2, 1, 0.158878, 1, 2, 2, 0.152594, 2, 2, 1, -0.723687, 2, 0, 0, 0.20873, 1, 3, 2, -0.639314, 1, 0, 0, 0.186871, 2, 2, 1, -1.5658, 2, 1, 1, 1.48686, 1, 0, 2, -1.85261, 1, 3, 1, -1.10597, 2, 3, 0, -1.13068, 2, 1, 1, -0.641111, 1, 3, 0, 1.07303, 2, 1, 2, 0.228069, 1, 1, 0, -1.16324, 1, 2, 0, 0.0715416, 2, 1, 0, -1.72212, 2, 1, 2, 0.592961, 1, 1, 0, 0.0702741, 1, 2, 1, 0.335669, 2, 0, 0, -0.123287, 1, 2, 1, 1.37317, 2, 0, 1, 1.02988, 2, 3, 0, 0.293462, 1, 0, 1, -1.01323, 2, 3, 0, -0.0208303, 1, 2, 1, -1.57039, 2, 1, 1, -0.157178, 1, 2, 2, -0.272078, 2, 2, 1, 0.141768, 1, 0, 1, -0.461509, 1, 2, 1, -0.946164, 2, 3, 0, 2.01576, 2, 0, 0, 0.166373, 1, 2, 2, 0.660717, 2, 1, 1, -1.21286, 1, 2, 2, 0.180199, 2, 3, 1, -0.595361, 1, 1, 0, -0.381507, 2, 2, 1, -1.87792, 1, 4, 0, -0.537681, 2, 2, 0, -0.241254, 1, 0, 0, -0.495114, 1, 1, 1, 0.741154, 2, 2, 2, 0.742292, 2, 1, 2, -0.169311, 2, 1, 2, -2.01848, 2, 1, 2, 0.615857, 2, 2, 1, -0.640972, 2, 2, 1, -0.346414, 2, 1, 0, 1.48343, 1, 4, 1, -1.90377, 1, 1, 1, -1.18165, 1, 4, 2, 1.04672, 1, 2, 2, -0.307787, 1, 3, 0, 0.732321, 2, 2, 1, 0.486602, 1, 2, 1, -1.2035, 1, 1, 0, 0.0103119, 2, 1, 1, -1.22635, 1, 2, 1, 0.371662, 1, 2, 1, -1.14825, 1, 0, 1, 0.143113, 1, 0, 0, 0.29213, 2, 2, 1, 0.350323, 1, 1, 0, 0.829469, 1, 0, 1, 0.935328, 1, 3, 0, 1.33785, 1, 2, 0, -0.388444, 2, 1, 2, -0.0402811, 2, 1, 1, -0.480712, 1, 2, 2, -0.269725, 1, 2, 0, -0.535207, 2, 1, 1, -0.0751064, 1, 2, 1, -0.381524, 1, 1, 1, -0.868622, 1, 1, 1, -0.883956, 2, 1, 1, 0.499586, 2, 1, 2, -1.90263, 2, 2, 0, 0.0441763, 1, 3, 1, 0.70604, 1, 2, 1, -1.55233, 1, 2, 0, 0.831961, 2, 2, 1, 1.82464, 2, 1, 2, 0.425736, 1, 2, 1, 0.963831, 2, 1, 1, 0.325759, 1, 2, 1, -0.244724, 2, 1, 0, -0.0917396, 1, 0, 2, 0.327643, 2, 1, 1, 0.0569216, 1, 1, 1, 0.167797, 2, 2, 2, -1.49514, 2, 0, 0, 1.0665, 1, 3, 2, -1.47805, 1, 1, 1, -0.480266, 2, 1, 0, -0.759664, 2, 1, 0, -1.53151, 1, 0, 1, 1.85249, 1, 1, 1, -1.48872, 2, 2, 1, 0.116953, 1, 2, 1, -1.03493, 2, 2, 0, 1.22664, 1, 0, 0, -1.83418, 2, 2, 0, -0.721164, 2, 2, 1, 0.877772, 1, 1, 1, 1.76436, 2, 2, 1, 0.200998, 2, 2, 1, 0.40742, 2, 1, 2, -0.0848745, 2, 1, 1, 0.312661, 2, 1, 2, -0.637996, 1, 3, 1, 1.26631, 1, 2, 0, 1.0116, 1, 2, 1, 0.0460521, 2, 0, 0, 2.2489, 1, 1, 0, 0.811494, 2, 1, 0, 0.116726, 2, 3, 0, 0.894939, 1, 2, 0, 0.877318, 2, 1, 1, 1.20569, 1, 1, 1, -0.77577, 2, 2, 2, -1.03506, 2, 0, 1, -0.265101, 1, 1, 0, -1.16755, 2, 0, 2, 0.580395, 1, 1, 0, -0.435998, 2, 0, 1, -0.314748, 1, 3, 1, 0.431009, 1, 0, 1, 0.291277, 2, 1, 1, -0.494424, 2, 1, 2, -0.256152, 1, 0, 1, -1.00912, 1, 0, 1, -0.756522, 1, 0, 0, -0.0317293, 1, 2, 2, 0.042126, 2, 1, 1, 1.99294, 1, 1, 0, -0.644503, 1, 2, 1, -0.340062, 2, 0, 1, -0.951815, 2, 2, 0, 0.543109, 2, 1, 1, 1.43482, 2, 0, 2, -0.374458, 2, 3, 1, -0.299489, 1, 0, 1, -1.09592, 2, 0, 2, 0.839406, 2, 2, 0, 0.388265 ) #
COVAR <- matrix( c , nrow = n , byrow=T)#
CLUSTER <- c( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ) #
CLUSTER[CLUSTER==-1] <- NA#
l <- 5#
g <- c( 0, 0, 2, 0, 0, 0, 0, 0, 1, 1, 0, 2, 0, 2, 2, 0, 2, 0, 1, 0, 0, 2, 2, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 2, 0, 2, 0, 2, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 2, 1, 1, 2, 0, 0, 0, 0, 2, 0, 1, 1, 0, 2, 0, 1, 1, 0, 2, 0, 0, 2, 0, 2, 0, 2, 0, 0, 0, 0, 0, 1, 1, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 2, 0, 2, 0, 2, 2, 0, 2, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 2, 2, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 2, 2, 0, 0, 0, 0, 1, 1, 1, 0, 0, 2, 2, 0, 0, 1, 2, 1, 0, 0, 0, 2, 2, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 2, 1, 1, 2, 0, 0, 2, 0, 0, 1, 1, 0, 1, 0, 2, 0, 0, 0, 0, 1, 1, 0, 1, 0, 2, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 2, 2, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 0, 2, 2, 1, 0, 1, 0, 0, 0, 0, 0, 2, 0, 1, 1, 1, 1, 0, 0, 0, 2, 0, 0, 1, 1, 0, 2, 0, 0, 0, 0, 2, 0, 2, 2, 0, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 2, 0, 0, 1, 2, 0, 1, 0, 1, 2, 1, 1, 0, 0, 1, 1, 1, 0, 2, 2, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 2, 0, 2, 0, 0, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 1, 0, 2, 0, 1, 1, 0, 1, 0, 2, 0, 2, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0, 2, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 0, 1, 2, 1, 0, 0, 2, 0, 0, 0, 1, 2, 0, 0, 0, 1, 1, 0, 1, 2, 1, 1, 1, 0, 0, 2, 1, 1, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 1, 1, 1, 0, 2, 2, 2, 2, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 2, 2, 0, 2, 0, 1, 0, 1, 0, 0, 2, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 2, 2, 0, 2, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 1, 1, 2, 0, 0, 2, 0, 0, 0, 2, 0, 0, 2, 0, 2, 0, 0, 2, 0, 0, 0, 2, 2, 0, 0, 0, 1, 1, 0, 1, 0, 2, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 2, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 2, 0, 0, 0, 2, 2, 2, 2, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 1, 0, 2, 2, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 2, 0, 1, 1, 2, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 1, 1, 0, 1, 1, 0, 1, 0, 2, 2, 0, 2, 0, 0, 0, 2, 2, 0, 0, 2, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 2, 2, 0, 2, 0, 0, 2, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 2, 0, 2, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 2, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 2, 0, 1, 1, 0, 1, 0, 2, 2, 2, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 2, 2, 2, 0, 0, 1, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 2, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 2, 0, 0, 0, 2, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 1, 1, 2, 1, 1, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 2, 0, 2, 2, 0, 2, 0, 2, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 2, 0, 0, 0, 2, 0, 0, 2, 0, 0, 2, 0, 1, 0, 1, 1, 1, 0, 0, 1, 2, 1, 0, 0, 1, 1, 1, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 2, 0, 0, 0, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 2, 0, 1, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 2, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0, 2, 0, 0, 2, 0, 1, 0, 1, 2, 0, 0, 2, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 2, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 2, 0, 1, 1, 0, 2, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 2, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 2, 2, 0, 1, 1, 0, 0, 0, 2, 2, 0, 0, 1, 2, 0, 0, 1, 0, 2, 2, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 2, 2, 0, 2, 0, 1, 1, 0, 1, 0, 0, 2, 0, 0, 0, 2, 2, 0, 1, 0, 0, 2, 0, 2, 0, 1, 0, 1, 0, 0, 2, 0, 0, 2, 0, 1, 1, 1, 0, 0, 2, -1, 0, 0, 1, 2, 1, 0, 0, 0, 2, 2, 2, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 2, 0, 2, 0, 2, 1, 0, 1, 0, 0, 2, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 1, 1, 0, 0, 2, 2, 0, 1, 0, 2, 0, 0, 0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 2, 0, 0, 1, 1, 1, 0, 0, 2, 0, 0, 2, 1, 2, 1, 0, 1, 0, 0, 2, 0, 0, 0, 0, 2, 1, 0, 0, 2, 2, 0, 0, 1, 2, 1, 1, 0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 1, 0, 0, 0, 0, 2, 0, 1, 2, 1, 1, 0, 2, 0, 0, 0, 0, 1, 0, 0, 1, 0, 2, 0, 2, 0, 2, 2, 0, 0, 2, 1, 1, 1, 0, 2, 0, 1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 2, 0, 0, 0, 2, 0, 0, 2, 0, 2, 1, 0, 1, 0, 1, 1, 0, 0, 0, 2, 0, 0, 2, 0, 0, 1, 0, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 2, 0, 2, 1, 0, 2, 0, 0, 2, 0, 0, 1, 0, 0, 2, 0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 0, 0, 0, 2, 0, 2, 1, 1, 2, 1, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 1, 0, 1, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 1, 1, 1, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 2, 0, 2, 1, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 2, 0, 0, 2, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 2, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 2, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 2, 0, 2, 2, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 2, 2, 0, 0, 2, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 2, 0, 2, 0, 0, 1, 1, 2, 1, 0, 0, 2, 0, 0, 2, 2, 0, 2, 0, 0, 2, 2, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 1, 1, 1, 1, 2, 0, 0, 2, 2, 0, 0, 2, 2, 0, 0, 2, 2, 2, 0, 2, 0, 2, 2, 1, 1, 0, 1, 0, 0, 2, 0, 2, 1, 1, 0, 0, 2, 0, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 0, 0, 0, 2, 0, 0, 0, 0, 2, 1, 0, 1, 0, 0, 0, 0, 2, 0, 1, 1, 1, 0, 0, 0, 0, 2, 0, 0, 1, 2, 0, 0, 0, 2, 2, 0, 2, 0, 1, 2, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 1, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 2, 1, 0, 1, 2, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 2, 0, 2, 1, 2, 0, 0, 2, 2, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 2, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1, 0, 2, 0, 0, 0, 0, 0, 2, 1, 1, 0, 1, 1, 0, 2, 0, 0, 2, 0, 2, 0, 1, 0, 0, 1, 0, 0, 2, 0, 0, 1, 1, 2, 1, 0, 0, 2, 1, 0, 0, 0, 2, 0, 0, 2, 0, 1, 1, 1, 0, 0, 2, 2, 2, 0, 0, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 1, 0, 1, 1, 2, 1, 0, 1, 0, 0, 2, 0, 0, 0, 2, 2, 0, 0, 0, 2, 0, 2, 0, 0, 2, 2, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 2, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 0, 1, 2, 0, 0, 0, 2, 2, 0, 2, 0, 1, 0, 0, 0, 0, 2, 0, 1, 1, 0, 2, 2, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0 ) #
GENO <- matrix( g , nrow = n ,byrow=T)#
GENO[GENO == -1 ] <- NA #
#
#
###  run gJLS2 (plink plugin)#
#
Rplink <- function(PHENO,GENO,CLUSTER,COVAR){#
 require(gJLS2)#
 #
  f1 <- function(s) #
       {    #
      r <-  gJLS2(GENO=s, SEX=COVAR[,1], Y=PHENO, COVAR=COVAR[,-1], Xchr=TRUE)#
      rr <- as.numeric(r[3:5])#
      #
      c( length(rr) , rr )#
       }#
       #
      apply( GENO , 2 , f1 )#
#
}#
#
#
#
#

apply( GENO , 2 , f1 )#

#
source("testRun.debug.R")#
#
 require(gJLS2)#
 #
  f1 <- function(s) #
       {    #
      r <-  gJLS2(GENO=s, SEX=ifelse(COVAR[,2]==0, 2, COVAR[,2]), Y=PHENO, COVAR=COVAR[,-2], Xchr=TRUE)#
      rr <- as.numeric(r[3:5])#
      #
      c( length(rr) , rr )#
       }#
       #
apply( GENO , 2 , f1 )#
      #

head(COVAR)#

f1 <- function(s) #
       {    #
      r <-  gJLS2(GENO=s, SEX=ifelse(COVAR[,1]==0, 2, COVAR[,1]), Y=PHENO, COVAR=COVAR[,-1], Xchr=TRUE)#
      rr <- as.numeric(r[3:5])#
      #
      c( length(rr) , rr )#
       }#
       #
apply( GENO , 2 , f1 )#

pkg_url <- "http://cran.r-project.org/bin/macosx/mavericks/contrib/3.1/Rserve_1.7-3.tgz". install.packages(pkg_url, repos = NULL). library(Rserve).#

